<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config></context:annotation-config>
    <context:component-scan base-package="database.apachebasicdatasource"/>
    <!--
        Aşağıda basitce BasicDataSource nasıl kullanılır gösterdim
        Bu bean sayesinde elimizde daha gelişmiş bir datasource bulunuyor, kendisi daha esnek bir yapıya sahip
        Open source bir kütüphanedir
        Connection objelerinin bir havuzdan gönderilmesi ve yok edilmesi performans sağlamaktadır
    -->
    <bean id="datasource" class="org.apache.tomcat.dbcp.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/hr"/>
        <property name="username" value="root"/>
        <property name="password" value=""/>
    </bean>

    <!--
        JdbcTemplate yine iş başında enjekte edilmeyi bekliyor :)
    -->
    <bean id="jdbctemp" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg name="dataSource" ref="datasource"/>
    </bean>

</beans>