<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <servlet>
        <!--Spring configuration file name : first-servlet.xml-->
        <servlet-name>first</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        
        <!--
        Aşağıdaki parametreler sayesinde istediğimiz bir isimde configuration file tanımlayabiliriz
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>WEB-INF/mvc-config.xml</param-value>
        </init-param>-->

        <load-on-startup>1</load-on-startup>
    </servlet>

    <!--
        <url-pattern> / </url-pattern> ile tüm linklerin DispatcherServlet e gönderilemesini sağlamaktadır
        <url-pattern> *.html </url-pattern> sadece html linklerinin DispatcherServlete gönderilmesini sağlamaktadır
        bunların örnekleri artabilir

        Static verilerin DispatcherServlet e gönderilmesinin bir anlamı yoktur bunu ilgili spring configuration dosyasında
        resoruce ları ayırarak belirttik
    -->
    <servlet-mapping>
        <servlet-name>first</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--Bir spring uygulaması birden fazla configuration dosyasına yayılabilir. birden fazla spring-configuration xml
        dosyaları yüklemek için aşağıdaki aşağıdaki Listener kullanilir-->
    <!--Yada istenilen  configuration dosyaları için param-value değereleri arttırılabilir -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
</web-app>